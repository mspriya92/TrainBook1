name: PowerAppenderrors
on:
  workflow_dispatch:
    inputs:
      COMPONENT:
        description: "Input the component to check (e.g., 'valid_component')"
        required: true
        type: string
      ENVIRONMENT:
        description: "Input the environment to check (e.g., 'prod')"
        required: true
        type: string
        options:
          - prod
          - dev
          - qa
          - uat
        default: "prod"  # Default to "prod" if no value is provided

jobs:
  job1:
    runs-on: self-hosted
    steps:
      - name: Check Component
        continue-on-error: true
        shell: powershell
        run: |
          Write-Host "Job 1 started"
          $component = "${{ inputs.COMPONENT }}"
          if ($component -eq "valid_component") {
            Write-Host "Component '$component' is valid"
          } else {
            Write-Host "Component '$component' is not valid"
            "Error from job1: Component '$component' not found" | Out-File -FilePath "$env:GITHUB_WORKSPACE\job_error_log.txt" 
            Get-Content "$env:GITHUB_WORKSPACE\job_error_log.txt"
            exit 1
          }

  job2:
    runs-on: self-hosted
    needs: job1
    steps:
      - name: Check Environment
        continue-on-error: true
        shell: powershell
        run: |
          Write-Host "Job 2 started"
          $environment = "${{ inputs.ENVIRONMENT }}"
          
          if ($environment -eq "prod") {
            Write-Host "Environment '$environment' is valid"
          } else {
            Write-Host "Environment '$environment' is not valid"
            "Error from job2: Invalid environment '$environment'" | Out-File -FilePath "$env:GITHUB_WORKSPACE\job_error_log.txt" -Append
            Get-Content "$env:GITHUB_WORKSPACE\job_error_log.txt"
          }

  final-notification:
    runs-on: self-hosted
    if: ${{ always() }}
    needs: [job1, job2]
    steps:
      - name: Check if there were any errors and send notification
        shell: powershell
        run: |
          Write-Host "Checking error logs from both Job1 and Job2"
          
          # Check if the error log exists and has content
          if (Test-Path "$env:GITHUB_WORKSPACE\job_error_log.txt") {
            Write-Host "Failure Details:"
            Get-Content "$env:GITHUB_WORKSPACE\job_error_log.txt"
          } else {
            Write-Host "No errors found."
          }

