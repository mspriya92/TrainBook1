name: Appenderrors
on:
  workflow_dispatch:
    inputs:
      COMPONENT:
        description: "Input the component to check (e.g., 'valid_component')"
        required: true
        type: string
      ENVIRONMENT:
        description: "Input the environment to check (e.g., 'prod')"
        required: true
        type: string
        options:
          - prod
          - dev
          - qa
          - uat
        default: "prod"  # Default to "prod" if no value is provided

jobs:
  job1:
    runs-on: self-hosted
    steps:
      - name: Check Component
        continue-on-error: true
        run: |
          echo "Job 1 started"
          if [ "${{ inputs.COMPONENT }}" = "valid_component" ]; then
            echo "Component '${{ inputs.COMPONENT }}' is valid"
          else
            echo "Component '${{ inputs.COMPONENT }}' is not valid"
            echo "Error: Component '${{ inputs.COMPONENT }}' not found" > $GITHUB_WORKSPACE/job_error_log.txt
            cat job_error_log.txt
            exit 1
          fi

  job2:
    runs-on: self-hosted
    needs: job1
    
    steps:
      - name: Check Environment
        continue-on-error: true
        run: |
          echo "Job 2 started"
          
          if [ "${{ inputs.ENVIRONMENT }}" = "prod" ]; then
            echo "Environment '${{ inputs.ENVIRONMENT }}' is valid"
          else
            echo "Environment '${{ inputs.ENVIRONMENT }}' is not valid"
            echo "Error: Invalid environment '${{ inputs.ENVIRONMENT }}'" >> $GITHUB_WORKSPACE/job_error_log.txt
            cat $GITHUB_WORKSPACE/job_error_log.txt
          fi

  final-notification:
    runs-on: self-hosted
    needs: [job1, job2]
    steps:
      - name: Check if there were any errors and send notification
        run: |
          echo "Checking error logs from both Job1 and Job2"
          
          # Check if the error log exists and has content
          if [ -f job_error_log.txt ]; then
            echo "Error Logs:"
            cat $GITHUB_WORKSPACE/job_error_log.txt
          else
            echo "No errors found."
          fi
 
