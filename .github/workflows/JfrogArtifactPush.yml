name: JfrogArtifactPush

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Listing the target directory
        run : ls -R 
        #working-directory: /home/runner/work/TrainBook1/TrainBook1/target
      - name: Create staging directory and copy .war
        run: |
          mkdir staging
          cp target/*.war staging/
      - name: Publish Artifact
        uses: actions/upload-artifact@v3
        with:
          name: web-app
          path: staging

      - name: Set up JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env: 
          JFROG_URL: ${{ vars.JFROG_URL }}
          JFROG_USER: ${{ vars.JFROG_USER }}
          JFROG_API_KEY: ${{ vars.JFROG_API_KEY }}
          #JFROG_TOKEN: ${{ vars.JFROG_TOKEN }}
      #- name: upload artifact to Jfrog
      - run: |
          jf config --url ${{ vars.JFROG_URL }} --user ${{ vars.JFROG_USER }} --apikey ${{ vars.JFROG_API_KEY }}
          # Consider specifying the exact WAR file name(s) instead of a wildcard
          jf rt upload "staging/TrainBook-1.0.0-SNAPSHOT.war" "JVM"
     
