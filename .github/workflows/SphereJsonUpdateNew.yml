name: SphereJsonUpdateNew
 
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to use'
        required: true
        
 
jobs:
  update-json:
    runs-on: self-hosted  
    environment : ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Download nsi.json from external source
        run: |
          echo "Downloading nsi.json from external source"
          Invoke-WebRequest -Uri "https://raw.githubusercontent.com/mspriya92/TrainBook1/main/nsi.json" -OutFile "nsinew.json"
        shell: powershell

      - name: Update nsi.json with secrets
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          prod_API_KEY: ${{ secrets.API_KEY }}
        run: |
          echo "Updating nsi.json with secrets"
          $json = Get-Content nsinew.json -Raw | ConvertFrom-Json
          $json.Sphere.DockerUsername = "$env:DOCKER_USERNAME"
          $json.Sphere.DockerPassword = "$env:DOCKER_PASSWORD"
          $json.Sphere.APIkey = "$env:prod_API_KEY"
          $json | ConvertTo-Json | Set-Content -Path nsinew.json
        shell: powershell
      - name: Encrypt nsinew.json file
        run: |
         echo "Encrypting nsinew.json file"
         $SecureString = Get-Content -Path "nsinew.json" -Raw | ConvertTo-SecureString -AsPlainText -Force
         $Encrypted = $SecureString | ConvertFrom-SecureString
         Set-Content -Path "nsinew_encrypted.json" -Value $Encrypted
        shell: powershell
 
      - name: Print encrypted nsinew.json content
        run: |
          echo "Encrypted nsinew.json content:"
          Get-Content -Path "nsinew_encrypted.json"
        shell: powershell
      #- name: Print updated nsi.json content
        #run: |
          #echo "Updated nsi.json content:"
          #Get-Content nsinew.json
        #shell: powershell
